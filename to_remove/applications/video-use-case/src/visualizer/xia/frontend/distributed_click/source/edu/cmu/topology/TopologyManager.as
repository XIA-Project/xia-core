package edu.cmu.topology {	import flash.display.*;	import flash.events.*;	import flash.net.*;	import flash.utils.Dictionary;	import flash.utils.Timer;	//import com.adobe.serialization.json.JSON;	import edu.cmu.layouts.*;	import edu.cmu.MyGlobal;		public class TopologyManager {				// Constants:		// Public Properties:				// Private Properties:		private var topology:Topology;		private var server:String;		private var container:DisplayObjectContainer;		private var layout:Layout;		private var timer:Timer;			// Initialization:		public function TopologyManager(server:String) { 			topology = new Topology();			this.server = server;			PullCurrentTopology(new TimerEvent("Fake"));		}			// Public Methods:		public function GetTopology():Topology {			return topology;		}				public function SetStage(container:Stage):void {			this.container = container;			UpdateDisplay();		}				public function SetLayout(layout:Layout) {			this.layout = layout;			UpdateDisplay();		}				public function StartUpdating(frequency:int = 5):void {			timer = new Timer(frequency*1000);			timer.addEventListener(TimerEvent.TIMER, PullCurrentTopology);			timer.start();		}				public function StopUpdating():void {			timer.stop();		}				// Protected Methods:		private function UpdateDisplay():void {			if (topology == null || layout == null) return;						layout.Arrange(topology, container);		}				private function PullCurrentTopology(e:TimerEvent):void {			//trace("pulling current topology");						// TODO: remove:			//topology.Update("");			//UpdateDisplay();						var requestSender:URLLoader= new URLLoader();			requestSender.addEventListener(Event.COMPLETE, ReceivedNewTopology);			var urlRequest :URLRequest = new URLRequest(MyGlobal.server + "/connections");						/* Setup HTTP Request */			//urlRequest.data = "blah";			//urlRequest.contentType = "application/x-www-form-urlencoded";			//urlRequest.method = URLRequestMethod.GET;			requestSender.load(urlRequest);		}				private function ReceivedNewTopology(event:Event):void {						var response:URLLoader = URLLoader(event.target);			//trace(response.data);			response.close(); 						//var jsonData:Object = JSON.decode(response.data);						topology.Update(response.data);			UpdateDisplay();		}	}	}