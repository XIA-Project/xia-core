package edu.cmu.gui {		import flash.display.MovieClip;	import flash.utils.Dictionary;	import flash.text.TextFormat;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;	import edu.cmu.MyGlobal;		public class LinkInfoPanel extends LinkInfoBase {				// Constants:		// Public Properties:		// Private Properties:		// UI Elements:		protected var packetCountLabels:Dictionary;						// Initialization:		public function LinkInfoPanel() {			packetCountLabels = new Dictionary();			configUI();		}		// Public Methods:		public override function updateCurrentTraffic(currentTrafficByType:Dictionary):void {			for (var type:String in currentTrafficByType) {				updateCountLabel(type, currentTrafficByType[type]);			}		}				public function updateCountLabel(type:String, count:int):void {			if (packetCountLabels[type] == null) {				var label:TextField = MyGlobal.makeLabel(type + ": " + count + " pkts/sec", MyGlobal.getColorForPrincipal(type));				addChild(label);				packetCountLabels[type] = label;				configUI();			}			else {				packetCountLabels[type].text = type + ": " + count + " pkts/sec";			}		}				// Protected Methods:		// Private Methods:				protected override function configUI():void {			var height:int = 0			var width:int = 0;						for each (var label:TextField in packetCountLabels) {				label.x = 0				label.y = height;				height += label.height;				if (label.width > width) {					width = label.width;				}			}			this.getChildAt(0).height = height + 10;			this.getChildAt(0).width = width + 10;		}	}	}